#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable

#include "worldlib"

#define WORKGROUP_SIZE 32

layout (local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = 1 ) in;

layout(binding = 0) uniform OutputData {
    uvec3 dims;
};

layout(binding = 1) uniform TextureData {
    vec2 offset;
    vec2 size;
};

layout(std430, binding = 2) buffer Input0 {
    float inputDistribution[];
};

layout(std430, binding = 3) buffer Output0 {
    vec4 outputTexture[];
};

#define PI 3.14

void main() {
    vec2 uv = gl_GlobalInvocationID.xy / vec2(dims.xy) * size + offset;
    uint id = id3(gl_GlobalInvocationID.xyz, dims);

    vec4 newColor = vec4(0.95, 0.85, 0.5, inputDistribution[id]);
    outputTexture[id] = applyAlpha(outputTexture[id], newColor);
}
